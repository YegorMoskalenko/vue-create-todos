{"ast":null,"code":"import { vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $props.modelValue = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.updateInput && $options.updateInput(...args)),\n    type: \"text\"\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  )), [[_vModelText, $props.modelValue]]);\n}","map":{"version":3,"mappings":";;wCACEA,oBAA6D,OAA7D,EAA6D;+DAA7CC,oBAAUC,OAAmC;IAAhCC,OAAK,yCAAEC,qDAAF,CAA2B;IAAZC,IAAI,EAAC;EAAO,CAA7D;;EAAA,mBAAgBJ","names":["_createElementBlock","$props","$event","onInput","$options","type"],"sourceRoot":"","sources":["/home/yegor/projects/vue-test-task/vue-todos/src/components/UI/ThemeInput.vue"],"sourcesContent":["<template>\n  <input v-model=\"modelValue\" @input=\"updateInput\" type=\"text\">\n</template>\n\n<script>\nexport default {\n  name: 'theme-input',\n  props: {\n    modelValue: [String, Number]\n  },\n  methods: {\n    updateInput(event){\n      this.$emit('update:modelValue', event.target.value)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import \"src/assets/styles/variables\";\ninput{\n  width: 250px;\n  border: 2px solid @theme-color-2;\n  border-radius: 100px;\n  padding: 8px 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}