{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-314dba8e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"notes\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", {\n  style: {\n    \"margin-right\": \"10px\"\n  }\n}, \"Confirm the note deletion !!!\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Remove the Note\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NoteItem = _resolveComponent(\"NoteItem\");\n\n  const _component_theme_button = _resolveComponent(\"theme-button\");\n\n  const _component_dialog_window = _resolveComponent(\"dialog-window\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.notes, (note, id) => {\n    return _openBlock(), _createBlock(_component_NoteItem, {\n      note: note,\n      id: id,\n      onRemove: $options.onRemove\n    }, null, 8\n    /* PROPS */\n    , [\"note\", \"id\", \"onRemove\"]);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )), _createVNode(_component_dialog_window, {\n    showDialog: $data.dialogVisibleNote,\n    \"onUpdate:showDialog\": _cache[1] || (_cache[1] = $event => $data.dialogVisibleNote = $event),\n    class: \"dialog__remove__note\",\n    onClick: _ctx.hideDialogNote\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_theme_button, {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.removeNoteConfirm(this.id))\n    }, {\n      default: _withCtx(() => [_hoisted_3]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"showDialog\", \"onClick\"])]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;gEAQPC,oBAAyE,QAAzE,EAAyE;EAAjEC,KAA0B,EAA1B;IAAA;EAAA;AAAiE,CAAzE,EAAmC,+BAAnC,EAAgE;AAAA;AAAhE;;iDACkD;;;;;;;;;uBATtDC,oBAWM,KAXN,cAWM,oBAVJA,oBAKEC,SALF,EAKE,IALF,EAKEC,YAJuBC,UAIvB,EAJ4B,CAAlBC,IAAkB,EAAZC,EAAY,KAAV;yBADpBC,aAKEC,mBALF,EAKE;MAHGH,IAAI,EAAEA,IAGT;MAFGC,EAAE,EAAEA,EAEP;MADGG,QAAM,EAAEC;IACX,CALF;;IAAA;GAKE,CALF;;EAAA,CAUI,GAJJC,aAGgBC,wBAHhB,EAGgB;IAHOC,UAAU,EAAEC,uBAGnB;+DAHmBA,0BAAiBC,OAGpC;IAHsCjB,KAAK,EAAC,sBAG5C;IAHoEkB,OAAK,EAAEZ;EAG3E,CAHhB;sBACE,MAAyE,CAAzEa,UAAyE,EACzEN,aAAgFO,uBAAhF,EAAgF;MAAjEF,OAAK,sCAAEZ,uBAAiB,KAAME,EAAvB,CAAF;IAA4D,CAAhF;wBAAkD,MAAe;;;;KAAjE,CADyE;;;;GAD3E;;EAAA,4BAII,CAXN","names":["class","_createElementVNode","style","_createElementBlock","_Fragment","_renderList","_ctx","note","id","_createBlock","_component_NoteItem","onRemove","$options","_createVNode","_component_dialog_window","showDialog","$data","$event","onClick","_hoisted_2","_component_theme_button"],"sourceRoot":"","sources":["/home/yegor/projects/vue-test-task/vue-todos/src/components/Notes/NoteList.vue"],"sourcesContent":["<template>\n  <div class=\"notes\">\n    <NoteItem\n        v-for=\"(note, id) in notes\"\n        :note=\"note\"\n        :id=\"id\"\n        @remove=\"onRemove\"\n    />\n    <dialog-window v-model:showDialog=\"dialogVisibleNote\" class=\"dialog__remove__note\" @click=\"hideDialogNote\">\n      <strong style=\"margin-right: 10px\">Confirm the note deletion !!!</strong>\n      <theme-button @click=\"removeNoteConfirm(this.id)\">Remove the Note</theme-button>\n    </dialog-window>\n  </div>\n</template>\n\n<script>\nimport {mapState, mapActions} from 'vuex'\nimport NoteItem from \"@/components/Notes/NoteItem\";\nexport default {\n  data(){\n    return {\n      dialogVisibleNote: false\n    }\n  },\n  components: {\n    NoteItem\n  },\n  methods: {\n    ...mapActions({\n      removeNoteConfirm: 'notesAndTodos/removeNoteConfirm',\n      hideDialogNote: 'notesAndTodos/hideDialogNote'\n    }),\n    onRemove(id){\n      console.log('dadad', id)\n      this.dialogVisibleNote = true\n    }\n  },\n  computed:{\n    ...mapState({\n      notes: state => state.notesAndTodos.notes,\n      // dialogVisibleNote: state => state.notesAndTodos.dialogVisibleNote\n    }),\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import \"src/assets/styles/variables\";\n.notes{\n  width: 1300px;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n\n  .dialog__remove__note{\n    .dialog__content{\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n}\n@media (max-width: 1440px) {\n  .notes{\n    margin: 15px 50px;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}