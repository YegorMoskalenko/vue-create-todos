{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todos__content\"\n};\nconst _hoisted_2 = {\n  class: \"todos__titles\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"text__done\"\n};\nconst _hoisted_4 = {\n  class: \"todo__title\"\n};\nconst _hoisted_5 = {\n  class: \"todos__actions\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Not done\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Done\");\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Edit Todo\");\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"Remove Todo\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_theme_button = _resolveComponent(\"theme-button\");\n\n  const _component_dialog_window = _resolveComponent(\"dialog-window\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.notes[this.idParam - 1].todos, todo => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"todos__titles__actions\",\n      key: todo.id\n    }, [_createElementVNode(\"div\", _hoisted_2, [todo.completed === true ? (_openBlock(), _createElementBlock(\"strong\", _hoisted_3, \"Done\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h4\", _hoisted_4, _toDisplayString(todo.todoTitle), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", _hoisted_5, [todo.completed === true ? (_openBlock(), _createBlock(_component_theme_button, {\n      key: 0,\n      class: \"btns__actions\",\n      onClick: $event => todo.completed = false\n    }, {\n      default: _withCtx(() => [_hoisted_6]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onClick\"])) : (_openBlock(), _createBlock(_component_theme_button, {\n      key: 1,\n      class: \"btns__actions\",\n      onClick: $event => todo.completed = true\n    }, {\n      default: _withCtx(() => [_hoisted_7]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onClick\"])), _createVNode(_component_theme_button, {\n      class: \"btns__actions\",\n      onClick: _cache[0] || (_cache[0] = () => {})\n    }, {\n      default: _withCtx(() => [_hoisted_8]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_theme_button, {\n      class: \"btns__actions\",\n      onClick: $event => _ctx.$emit('removeTodo', todo)\n    }, {\n      default: _withCtx(() => [_hoisted_9]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onClick\"])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createVNode(_component_dialog_window, {\n    showDialog: $data.dialogVisibleTodoEdit,\n    \"onUpdate:showDialog\": _cache[1] || (_cache[1] = $event => $data.dialogVisibleTodoEdit = $event)\n  }, null, 8\n  /* PROPS */\n  , [\"showDialog\"])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EAEFA,KAAK,EAAC;;;;EACDA,KAAK,EAAC;;;EACVA,KAAK,EAAC;;;EAEPA,KAAK,EAAC;;;iDAE0F;;iDACzB;;iDAE5B;;iDACyB;;;;;;;uBAZ7EC,oBAkBM,KAlBN,cAkBM,oBAjBJA,oBAaMC,SAbN,EAaM,IAbN,EAaMC,iBAbkDC,KAalD,CAbuD,KAAMC,OAAN,GAAa,CAapE,EAb0EC,KAa1E,EAbqCC,IAA0C,IAAtC;yBAA/CN,oBAaM,KAbN,EAaM;MAbDD,KAAK,EAAC,wBAaL;MAbkFQ,GAAG,EAAED,IAAI,CAACE;IAa5F,CAbN,GACEC,oBAGM,KAHN,cAGM,CAF6BH,IAAI,CAACI,SAAL,KAAc,sBAA/CV,oBAAuE,QAAvE,cAA0D,MAA1D,sCAEI,EADJS,oBAA+C,IAA/C,cAA+CE,iBAArBL,IAAI,CAACM,SAAgB,CAA/C,EAAwC;IAAA;IAAxC,CACI,CAHN,GAIAH,oBAOM,KAPN,cAOM,CALgBH,IAAI,CAACI,SAAL,KAAc,sBAAlCG,aAA0HC,uBAA1H,EAA0H;YAAA;MAA7Ef,KAAK,EAAC,eAAuE;MAAtDgB,OAAK,YAAET,IAAI,CAACI,SAAL,GAAc;IAAiC,CAA1H;wBAAmG,MAAQ;;;;KAA3G;;IAAA,iCACAG,aAA6FC,uBAA7F,EAA6F;YAAA;MAAxEf,KAAK,EAAC,eAAkE;MAAjDgB,OAAK,YAAET,IAAI,CAACI,SAAL,GAAc;IAA4B,CAA7F;wBAA0E,MAAI;;;;KAA9E;;IAAA,eAII,EAFJM,aAAsEF,uBAAtE,EAAsE;MAAxDf,KAAK,EAAC,eAAkD;MAAjCgB,OAAK,4BAAN,OAAS,CAAH;IAA4B,CAAtE;wBAA8C,MAAS;;;;KAAvD,CAEI,EADJC,aAAiGF,uBAAjG,EAAiG;MAAnFf,KAAK,EAAC,eAA6E;MAA5DgB,OAAK,YAAEE,WAAK,YAAL,EAAoBX,IAApB;IAAqD,CAAjG;wBAAuE,MAAW;;;;KAAlF;;IAAA,cACI,CAPN,EALF;GAaM,CAbN;;EAAA,CAiBI,GAHJU,aAEgBE,wBAFhB,EAEgB;IAFOC,UAAU,EAAEC,2BAEnB;+DAFmBA,8BAAqBC;EAExC,CAFhB;;EAAA,iBAGI,CAlBN","names":["class","_createElementBlock","_Fragment","_renderList","notes","idParam","todos","todo","key","id","_createElementVNode","completed","_toDisplayString","todoTitle","_createBlock","_component_theme_button","onClick","_createVNode","_ctx","_component_dialog_window","showDialog","$data","$event"],"sourceRoot":"","sources":["/home/yegor/projects/vue-test-task/vue-todos/src/components/Todos/TodoItem.vue"],"sourcesContent":["<template>\n  <div class=\"todos__content\">\n    <div class=\"todos__titles__actions\" v-for=\"todo in this.notes[this.idParam - 1].todos\" :key=\"todo.id\">\n      <div class=\"todos__titles\">\n        <strong class=\"text__done\" v-if=\"todo.completed === true\">Done</strong>\n        <h4 class=\"todo__title\">{{todo.todoTitle}}</h4>\n      </div>\n      <div class=\"todos__actions\">\n\n        <theme-button v-if=\"todo.completed === true\" class=\"btns__actions\" @click=\"todo.completed = false\">Not done</theme-button>\n        <theme-button v-else class=\"btns__actions\" @click=\"todo.completed = true\">Done</theme-button>\n\n        <theme-button class=\"btns__actions\" @click=\"\">Edit Todo</theme-button>\n        <theme-button class=\"btns__actions\" @click=\"$emit('removeTodo', todo)\">Remove Todo</theme-button>\n      </div>\n    </div>\n    <dialog-window v-model:showDialog=\"dialogVisibleTodoEdit\">\n\n    </dialog-window>\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nexport default {\n  data(){\n    return {\n      idParam: this.$route.params.id,\n      dialogVisibleTodoEdit: true\n    }\n  },\n  computed: {\n    ...mapState({\n      notes: state => state.notesAndTodos.notes\n    }),\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import \"src/assets/styles/variables\";\n.todos__content{\n  .todos__titles__actions{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: @theme-color;\n    min-height: 50px;\n    border: 2px solid @theme-color-2;\n    border-radius: 12px;\n    padding: 15px 50px;\n    margin: 20px 100px 0 100px;\n    box-shadow: 4px 8px 8px @theme-color-2;\n\n    .todos__titles{\n      display: flex;\n      .text__done{\n        color: green;\n        margin-right: 15px;\n      }\n    }\n\n    .btns__actions{\n      margin-right: 10px;\n    }\n\n    &:hover{\n      filter: brightness(1.2);\n      transition-duration: 0.5s;\n      -webkit-transform: scale(1.05);\n      -ms-transform: scale(1.05);\n    }\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}