{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo\"\n};\nconst _hoisted_2 = {\n  class: \"todo__content\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Create todo\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_theme_input = _resolveComponent(\"theme-input\");\n\n  const _component_theme_button = _resolveComponent(\"theme-button\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_theme_input, {\n    id: \"todo__input\",\n    placeholder: \"Write a todo\",\n    modelValue: $data.todo.todoTitle,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.todo.todoTitle = $event)\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_theme_button, {\n    style: {\n      \"margin-left\": \"20px\"\n    },\n    onClick: _ctx.createTodoEmit\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"]), _createTextVNode(\" \" + _toDisplayString(this.idParam), 1\n  /* TEXT */\n  )])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;iDAMuD;;;;;;;uBAPpEC,oBAUM,KAVN,cAUM,CATJC,oBAQM,KARN,cAQM,CAPJC,aAIEC,sBAJF,EAIE;IAHEC,EAAE,EAAC,aAGL;IAFEC,WAAW,EAAC,cAEd;gBADWC,WAAKC,SAChB;+DADWD,WAAKC,YAASC;EACzB,CAJF;;EAAA,iBAOI,EAFJN,aAA0FO,uBAA1F,EAA0F;IAA5EC,KAAyB,EAAzB;MAAA;IAAA,CAA4E;IAAjDC,OAAK,EAAEC;EAA0C,CAA1F;sBAAgE,MAAW;;;;GAA3E;;EAAA,cAEI,mBAFsF,MAC1FC,sBAAOC,OAAP,GAAc;EAAA;GACV,CARN,CASI,CAVN","names":["class","_createElementBlock","_createElementVNode","_createVNode","_component_theme_input","id","placeholder","$data","todoTitle","$event","_component_theme_button","style","onClick","_ctx","_toDisplayString","idParam"],"sourceRoot":"","sources":["/home/yegor/projects/vue-test-task/vue-todos/src/components/Forms/FormTodo.vue"],"sourcesContent":["<template>\n  <div class=\"todo\">\n    <div class=\"todo__content\">\n      <theme-input\n          id=\"todo__input\"\n          placeholder=\"Write a todo\"\n          v-model=\"todo.todoTitle\"\n      />\n      <theme-button style=\"margin-left: 20px\" @click=\"createTodoEmit\">Create todo</theme-button>\n      {{this.idParam}}\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapState} from \"vuex\";\n\nexport default {\n  data(){\n    return {\n      todo: {\n        todoTitle: ''\n      },\n      idParam: this.$route.params.id\n    }\n  },\n  methods: {\n    // createTodoEmit(){\n    //   if(this.notes[this.idParam - 1].todos.length >= 1){\n    //     this.todo.id = this.notes[this.idParam - 1].todos[this.notes[this.idParam - 1].todos.length - 1].id + 1\n    //   }\n    //   else {\n    //     this.todo.id = 1\n    //   }\n    //   this.$emit('createTodo', this.todo)\n    // }\n  },\n  computed: {\n    ...mapState({\n      notes: state => state.notesAndTodos.notes\n    }),\n    inputFocus(){\n      return document.querySelector('#todo__input').focus()\n    }\n  },\n  mounted() {\n    this.inputFocus\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import \"src/assets/styles/variables\";\n.todo{\n  .todo__content{\n    #todo__input{\n      width: 500px;\n    }\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}