{"ast":null,"code":"import { vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $props.modelValue = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  )), [[_vModelText, $props.modelValue]]);\n}","map":{"version":3,"mappings":";;wCACEA,oBAAwC,OAAxC,EAAwC;+DAAxBC,oBAAUC,OAAc;IAAZC,IAAI,EAAC;EAAO,CAAxC;;EAAA,mBAAgBF","names":["_createElementBlock","$props","$event","type"],"sourceRoot":"","sources":["/home/yegor/projects/vue-test-task/vue-todos/src/components/UI/ThemeInput.vue"],"sourcesContent":["<template>\n  <input v-model=\"modelValue\" type=\"text\">\n</template>\n\n<script>\nexport default {\n  name: 'theme-input',\n  props: {\n    modelValue: {String, Number}\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import \"src/assets/styles/variables\";\ninput{\n  width: 250px;\n  border: 2px solid @theme-color-2;\n  border-radius: 100px;\n  padding: 8px 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}